<!DOCTYPE html>
<html lang="fr">
<head>
    <meta charset="UTF-8">
    <title>Voir Commande</title>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/3.6.172/pdf.min.js"></script>
</head>
<body>
    <div class="container mt-3">
        <!-- En-tête de la commande -->
        <div class="d-flex justify-content-between align-items-center">
            <h2 class="mb-4">Voir Commande (FAC2024/10/001)</h2>
            <a href="@Url.Action("GenererPdfFacture", "Commande", new { idCommande = ViewBag.IdCommande })"
               class="btn btn-primary">
                Télécharger
            </a>
        </div>
    </div>

    <div class="container mt-3" style="overflow-x: auto;height:900px;overflow-y:hidden;">
        <canvas id="pdfCanvas" width="800" height="600" style="width: 100%; height: auto; border: 1px solid #ccc;"></canvas>
    </div>

    <!-- Bouton PayPal -->
    <div class="container mt-5">
        <h1 class="text-center">Procéder au paiement</h1>
        <div class="paypal-button text-center">
            <form action="/Payments/CreatePayment" method="post">
                <input type="hidden"  name="montantAriary" value="@ViewBag.TotalEnEuro" />
                <button type="submit" class="btn btn-success">Payer avec PayPal</button>
            </form>
        </div>
    </div>

    <script>
        var url = '@Url.Action("GenererPdfFacture", "Commande", new { idCommande = ViewBag.IdCommande })';
        var loadingTask = pdfjsLib.getDocument(url);
        var scale = 2.0; // Réduisez le facteur de mise à l'échelle pour ajuster la hauteur

        loadingTask.promise.then(function(pdf) {
            pdf.getPage(1).then(function(page) {
                var viewport = page.getViewport({ scale: scale });
                var canvas = document.getElementById('pdfCanvas');
                var context = canvas.getContext('2d');
                canvas.height = viewport.height;
                canvas.width = viewport.width;

                var renderContext = {
                    canvasContext: context,
                    viewport: viewport
                };
                page.render(renderContext);
            });
        }, function(reason) {
            console.error('Erreur lors du chargement du PDF : ' + reason);
        });

        window.addEventListener('resize', function() {
            var canvas = document.getElementById('pdfCanvas');
            loadingTask.promise.then(function(pdf) {
                pdf.getPage(1).then(function(page) {
                    var viewport = page.getViewport({ scale: scale });
                    canvas.height = viewport.height;
                    canvas.width = viewport.width;

                    var renderContext = {
                        canvasContext: canvas.getContext('2d'),
                        viewport: viewport
                    };
                    page.render(renderContext);
                });
            });
        });
    </script>
</body>
</html>
