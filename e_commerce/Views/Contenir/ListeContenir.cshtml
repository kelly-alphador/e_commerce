@model IEnumerable<e_commerce.Models.ContenirViewModel>
@using GridMvc.Html
@{
    ViewBag.Title = "ListeContenir";
}

@section Scripts {
    <!-- Ajoutez jQuery depuis un CDN fiable -->
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <script>
        $(document).ready(function () {

            // Fonction pour vérifier si le panier est vide
            function checkPanierVide() {
                if ($('#contenuPanier table tbody tr').length === 0) {
                    $('#alertPanierVide').show();  // Afficher l'alerte si le panier est vide
                    $('#contenuPanier').hide();   // Cacher le tableau
                } else {
                    $('#alertPanierVide').hide(); // Cacher l'alerte
                    $('#contenuPanier').show();   // Afficher le tableau
                }
            }

            // Exécuter cette fonction au chargement initial
            checkPanierVide();

            // Fonction pour vider le panier
            $('#viderPanier').click(function () {
                Swal.fire({
                    title: 'Êtes-vous sûr de vouloir vider le panier ?',
                    text: "Cette action ne peut pas être annulée!",
                    icon: 'warning',
                    showCancelButton: true,
                    confirmButtonColor: '#3085d6',
                    cancelButtonColor: '#d33',
                    confirmButtonText: 'Oui, vider!',
                    cancelButtonText: 'Annuler'
                }).then((result) => {
                    if (result.isConfirmed) {
                        // Si l'utilisateur confirme, lancer l'Ajax pour vider le panier
                        $.ajax({
                            url: '@Url.Action("ViderPanier", "Contenir")',
                            type: 'POST',
                            success: function (response) {
                                if (response.success) {
                                    $('#contenuPanier').empty();
                                    $('.notification p').text(response.totalItems);
                                    if (response.totalItems == 0) {
                                        $('.notification').hide;
                                    }
                                    checkPanierVide(); // Vérifier si le panier est vide après la suppression

                                    Swal.fire('Panier vidé!', 'Le panier a été vidé avec succès.', 'success');
                                } else {
                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Erreur',
                                        text: response.message,
                                    });
                                }
                            },
                            error: function () {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Erreur',
                                    text: 'Impossible de vider le panier.',
                                });
                            }
                        });
                    }
                });
            });

            // Fonction pour supprimer un article du panier
            $('.btn-delete').click(function (event) {
                var btnClick = $(event.target).closest('button');
        var IdSupprimer = $(btnClick).attr('data-id');
        var IdPanier = $(btnClick).attr('data-id-panier');

        Swal.fire({
            title: 'Êtes-vous sûr ?',
            text: "Voulez-vous vraiment supprimer ce produit ?",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#3085d6',
            cancelButtonColor: '#d33',
            confirmButtonText: 'Oui, supprimer !',
            cancelButtonText: 'Annuler'
        }).then((result) => {
            if (result.isConfirmed) {
                $.ajax({
                    url: '@Url.Action("Delete", "Contenir")',
                    type: 'POST',
                    data: { id: IdSupprimer, idPanier: IdPanier },
                    success: function (response) {
                        if (response.success) {
                            // Supprimer la ligne du produit du tableau
                            $(btnClick).closest('tr').fadeOut(400, function () {
                                $(this).remove();
                                checkPanierVide(); // Vérifier si le panier est vide après la suppression
                            });

                            Swal.fire('Supprimé!', 'Le produit a été supprimé avec succès.', 'success');

                            // Mettre à jour la notification du panier avec la nouvelle quantité
                            $('.notification p').text(response.totalItems);

                            // Mettre à jour le prix total dans la vue
                            $('.totalPrix').text(response.totalPrice);
                        } else {
                            Swal.fire({
                                icon: 'error',
                                title: 'Erreur',
                                text: response.message,
                            });
                        }
                    },
                    error: function () {
                        Swal.fire({
                            icon: 'error',
                            title: 'Erreur',
                            text: 'Impossible de supprimer l\'article.',
                        });
                    }
                });
            }
        });
            });
        });
    </script>
}

<h2>ListeContenir</h2>

<!-- Alerte lorsque le panier est vide -->
<div id="alertPanierVide" class="alert alert-warning" role="alert" style="display:none;">
    Votre panier est vide !
</div>

<!-- Contenu du panier -->
<div class="row">
    <div class="col-lg-8" id="contenuPanier">
        @Html.Grid(Model).Columns(columns =>
   {
       columns.Add(c => c.nom_prod);
       columns.Add(c => c.qte).Filterable(true);
       columns.Add(c => c.prix_prod).Titled("Prix");
       columns.Add(c => c.prix).Titled("Montant");
       columns.Add()
           .Sanitized(false)
           .Encoded(false)
           .RenderValueAs(c => "<button class='btn btn-default btn-delete' data-id='" + c.id_prod + "' data-id-panier='" + c.id_panier + "'><span class='glyphicon glyphicon-remove'/></button>");
   }).WithPaging(5)
        <button id="viderPanier" class="btn btn-danger">Vider Panier</button>
        <h3>Total Prix : <span class="totalPrix">@ViewBag.Total</span>Ar</h3>
    </div>
    <div class="col-lg-4">
        <!-- Autres contenus ici -->
        <div class="card_total">
            <h5 class="card-header_total"><span class="glyphicon glyphicon-shopping-cart"></span> Totaux</h5>
            <div class="card-body_total">
                <h3 class="card-title_total">Total Prix : <span class="totalPrix">@ViewBag.Total</span>Ar</h3>
                <a href="@Url.Action("PasserCommande","Commande")" class="btn_total">Passer commande</a>
            </div>
        </div>

    </div>
</div>
@if (TempData["ErrorMessage"] != null)
{
    <script>
        swal({
            title: "Erreur",
            text: "@TempData["ErrorMessage"]",
            type: "error",
            confirmButtonText: "Ok"
        });
    </script>
}
